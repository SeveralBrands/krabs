(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[505],{1238:function(e,t,a){"use strict";a.r(t),a.d(t,{frontMatter:function(){return i},metadata:function(){return o},toc:function(){return l},default:function(){return p}});var r=a(2122),n=a(9756),s=(a(7294),a(3905)),i={sidebar_position:1,title:"Getting Started"},o={unversionedId:"tutorial-basics/getting-started",id:"tutorial-basics/getting-started",isDocsHomePage:!1,title:"Getting Started",description:"Project Setup",source:"@site/docs/tutorial-basics/getting-started.md",sourceDirName:"tutorial-basics",slug:"/tutorial-basics/getting-started",permalink:"/krabs/docs/tutorial-basics/getting-started",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/tutorial-basics/getting-started.md",version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Getting Started"},sidebar:"tutorialSidebar",previous:{title:"Intro",permalink:"/krabs/docs/intro"},next:{title:"Krabs Configuration",permalink:"/krabs/docs/tutorial-basics/krabs-configuration"}},l=[{value:"Project Setup",id:"project-setup",children:[]}],c={toc:l};function p(e){var t=e.components,a=(0,n.Z)(e,["components"]);return(0,s.kt)("wrapper",(0,r.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"project-setup"},"Project Setup"),(0,s.kt)("p",null,"We'll start by using create-next-app for creating a new Next.js app."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"npx create-next-app my-app && cd my-app\n")),(0,s.kt)("p",null,"now we will add two more dependencies: Express.js and Krabs:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add express krabs\n")),(0,s.kt)("p",null,"We will also need to create a custom server for handling our Next.js instance. If you haven't already, please read the ",(0,s.kt)("a",{parentName:"p",href:"/docs/intro#caveats"},"caveats")," section."),(0,s.kt)("p",null,"Let's create a new file called ",(0,s.kt)("inlineCode",{parentName:"p"},"server.js"),". It will be the entry point of our custom Express.js server."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"const express = require('express');\nconst next = require('next');\nconst krabs = require('krabs').default;\nconst dev = process.env.NODE_ENV !== 'production';\nconst app = next({ dev });\n\nasync function main() {\n  try {\n    await app.prepare();\n\n    const handle = app.getRequestHandler();\n    const server = express();\n\n    server\n      .get('*', (req, res) => krabs(req, res, handle, app))\n      .listen(3000, () => console.log('server ready'));\n\n  } catch (err) {\n    console.log(err.stack);\n  }\n}\n\nmain();\n")),(0,s.kt)("p",null,"As you can see, the krabs function accepts four parameters:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"req"),": Express.js request object"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"res"),": Express.js response object"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"handle"),": the Next.js route handler"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"app"),":  the Next.js app object")),(0,s.kt)("p",null,"It can actually accept one more argument, the krabs configuration, which is basically a JavaScript object. There's another way for configuring the multi-tenant settings for our krabs middleware: by creating a .krabs.js file inside of the root folder, and we'll proceed like that."))}p.isMDXComponent=!0}}]);